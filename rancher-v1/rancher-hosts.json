{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "MinSize": {
      "Type": "String",
      "Description": "The minimum number of instances",
      "Default": 1
    },
    "MaxSize": {
      "Type": "String",
      "Description": "The maximum number of instances",
      "Default": 2
    },
    "InstanceType": {
      "Type": "String",
      "Description": "The size of the instances",
      "Default": "t2.small"
    },
    "ImageId": {
      "Type": "String",
      "Default": "ami-cd0f5cb6"
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "CPUAlarmHighEvalPeriods": {
      "Type": "String",
      "Default": "5"
    },
    "CPUAlarmHighThreshold": {
      "Type": "String",
      "Default": "90"
    },
    "CPUAlarmLowThreshold": {
      "Type": "String",
      "Default": "60"
    },
    "CPUAlarmLowEvalPeriods": {
      "Type": "String",
      "Default": "5"
    },
    "AlarmPeriod": {
      "Type": "String",
      "Default": "60"
    },
    "RancherServerURL": {
      "Type": "String"
    },
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Default": "vpc-"
    },
    "PublicSubnets": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Default": "subnet-"
    },
    "CattleLabel": {
      "Type": "String",
      "Default": "mylabel"
    }
  },
  "Resources": {
    "ComponentAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": 1,
          "MaxBatchSize": 1,
          "PauseTime": "PT0S"
        }
      },
      "Properties": {
        "VPCZoneIdentifier" : { "Ref" : "PublicSubnets" },
        "Tags": [
          {
            "Value": "rancher",
            "PropagateAtLaunch": true,
            "Key": "Project"
          },
          {
            "Value": "rancher-node",
            "PropagateAtLaunch": true,
            "Key": "Name"
          },
          {
            "Value": "rancher-node",
            "PropagateAtLaunch": true,
            "Key": "Component"
          }
        ],
        "MinSize": {
          "Ref": "MinSize"
        },
        "MaxSize": {
          "Ref": "MaxSize"
        },
        "LaunchConfigurationName": {
          "Ref": "ComponentLaunchConfiguration"
        }
      }
    },
    "InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [ "ec2.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "ApplicationPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "elasticbeanstalk:*",
                    "elastiCache:*",
                    "route53:*",
                    "ec2:*",
                    "elasticloadbalancing:*",
                    "autoscaling:*",
                    "cloudwatch:*",
                    "dynamodb:*",
                    "s3:*",
                    "sns:*",
                    "sqs:*",
                    "cloudformation:*",
                    "rds:*",
                    "iam:AddRoleToInstanceProfile",
                    "iam:CreateInstanceProfile",
                    "iam:CreateRole",
                    "iam:PassRole",
                    "iam:ListInstanceProfiles",
                    "elasticfilesystem:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "HostsInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{
            "Ref": "InstanceRole"
        }]
      }
    },
    "ComponentLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "HostsInstanceProfile"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "ComponentSecurityGroup"
          }
        ],
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "ImageId": {
          "Ref": "ImageId"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "curl https://releases.rancher.com/install-docker/1.12.sh | sh\n",
                "sudo service docker start\n",
                "sudo docker run ",
                {
                  "Fn::Join": [
                    "",
                    [
                      "-e CATTLE_HOST_LABELS='",
                      {
                        "Ref": "CattleLabel"
                      },
                      "'"
                    ]
                  ]
                },
                " --rm --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/rancher:/var/lib/rancher rancher/agent:v1.2.6 ",
                {
                  "Fn::Join": [
                    "",
                    [
                      "",
                      {
                        "Ref": "RancherServerURL"
                      },
                      ""
                    ]
                  ]
                },
                "\n",
              ]
            ]
          }
        }
      }
    },
    "ComponentScaleUpPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "ComponentAutoScalingGroup"
        },
        "AdjustmentType": "ChangeInCapacity",
        "Cooldown": 240,
        "ScalingAdjustment": 1
      }
    },
    "ComponentScaleDownPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "ComponentAutoScalingGroup"
        },
        "AdjustmentType": "ChangeInCapacity",
        "Cooldown": 60,
        "ScalingAdjustment": -1
      }
    },
    "CPUAlarmHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Scale-up if CPU > 90% for 5 minutes",
        "Threshold": {
          "Ref": "CPUAlarmHighThreshold"
        },
        "AlarmActions": [
          {
            "Ref": "ComponentScaleUpPolicy"
          }
        ],
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": {
          "Ref": "CPUAlarmHighEvalPeriods"
        },
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": {
          "Ref": "AlarmPeriod"
        },
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "ComponentAutoScalingGroup"
            }
          }
        ]
      }
    },
    "CPUAlarmLow": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Scale-down if CPU < 60% for 5 minutes",
        "Threshold": {
          "Ref": "CPUAlarmLowThreshold"
        },
        "AlarmActions": [
          {
            "Ref": "ComponentScaleDownPolicy"
          }
        ],
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": {
          "Ref": "CPUAlarmLowEvalPeriods"
        },
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": {
          "Ref": "AlarmPeriod"
        },
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "ComponentAutoScalingGroup"
            }
          }
        ]
      }
    },
    "ComponentSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "SecurityGroupIngress": [
          {
            "FromPort": 0,
            "ToPort": 0,
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        },
        "GroupDescription": "A component security group allowing access to the outside world"
      }
    }
  }
}
